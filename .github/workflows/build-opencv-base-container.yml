name: Build OpenCV Base

on:
  push:
    branches: [ main ]
    paths:
    - .github/actions/build-intermediate/**
    - .github/workflows/build-opencv-base-container.yml
    - build/containers/intermediate/Dockerfile.opencvsharp-build
    - build/intermediate-containers.mk
    - Makefile
  pull_request:
    types: [assigned, opened, synchronize, reopened, labeled, unlabeled]
    branches: [ main ]
    paths:
    - .github/actions/build-intermediate/**
    - .github/workflows/build-opencv-base-container.yml
    - build/containers/intermediate/Dockerfile.opencvsharp-build
    - build/intermediate-containers.mk
    - Makefile
  pull_request_review_comment:
    types: [created]

env:
  AKRI_COMPONENT: opencvsharp-build
  MAKEFILE_COMPONENT: opencv-base

jobs:

  add-label-missing-comment:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'build-dependency-containers') == false
    steps:
    - uses: actions/checkout@v2
    - name: Add comment about missing build-dependency-containers label
      uses: actions/github-script@v4
      if: success()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'hey this apparently should run but running it will take hours. Do you want to run it? If so, add flag build deps cont. (also tags Akri Maintainers)'
          })
          exit 1

  add-build-label-to-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '/add-build-dependency-containers') && github.event_name == 'pull_request_review_comment'
    steps:
    - uses: actions/checkout@v2
    - name: Add label
      uses: actions/github-script@v4
      if: success()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.addLabels({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['build-dependency-containers']
          })
          github.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ‘‹ Added build-dependency-containers label :)!'
          })

  per-arch:
    if: contains(github.event.pull_request.labels.*.name, 'build-dependency-containers') == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm64v8
          - arm32v7
          - amd64
    steps:
    - name: Checkout the head commit of the branch
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    # Only run build version change check if PR does not have "same version" label
    - if: >-
        startsWith(github.event_name, 'pull_request') &&
        contains(github.event.pull_request.labels.*.name, 'same version') == false
      name: Ensure that ${{ env.AKRI_COMPONENT }} version has changed
      run: |
        git fetch origin main
        git diff origin/main -- ./build/intermediate-containers.mk | grep "BUILD_OPENCV_BASE_VERSION = " | wc -l | grep -v 0

    - name: Prepare To Install
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install Deps
      run: |
        yarn install
        yarn add @actions/core @actions/github @actions/exec fs

    - name: Run Per-Arch component build for ${{ env.AKRI_COMPONENT }}
      uses: ./.github/actions/build-intermediate
      with:
        github_event_name: ${{ github.event_name }}
        github_ref: ${{ github.ref }}
        github_event_action: ${{ github.event.action }}
        github_merged: ${{ github.event.pull_request.merged }}
        container_name: ${{ env.AKRI_COMPONENT }}
        container_prefix: ghcr.io/deislabs/akri
        container_registry_base_url: ghcr.io
        container_registry_username: ${{ secrets.crUsername }}
        container_registry_password: ${{ secrets.crPassword }}
        makefile_component_name: ${{ env.MAKEFILE_COMPONENT }}
        platform: ${{ matrix.arch }}
